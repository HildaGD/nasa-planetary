{"version":3,"sources":["containers/Navbar.js","services/getPictureDate.js","services/getPreviousDay.js","services/getNextDay.js","components/Bookmark.js","store/actions/types.js","containers/AstrologyPictureOfDay.js","containers/FavoritePictures.js","App.js","serviceWorker.js","store/reducers/app_reducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["Navbar","useState","menu","setMenu","show","setShow","useEffect","className","href","type","onClick","APIKEY","process","REACT_APP_NASA_API_KEY","getPictureDate","date","axios","get","then","response","console","log","Promise","resolve","catch","error","getPreviousDay","data","reject","getNetxDay","Bookmark","props","favoritePictures","useSelector","state","astronomy","setFavorite","findPicture","setFindPicture","dispatch","useDispatch","OverlayTrigger","overlay","Tooltip","id","Button","favoritesImages","JSON","parse","localStorage","getItem","picture","index","includes","findPictureInFavoritePictures","push","setItem","stringify","pictureData","Swal","fire","style","color","AstronomyPictureOfDay","astrology","setAstrology","dayBefore","setDayBefore","dayAfter","setDayAfter","Date","startDate","currentDate","setCurrentDay","showPicture","setShowPicture","getTodayPicture","a","datePic","getPreviousPicture","previous","moment","subtract","format","picPrevious","getNextPicture","next","add","getNextDay","picNext","warn","today","marginBottom","Card","Body","Text","selected","onChange","specDay","handleDatepickerChange","maxDate","minTime","Carousel","Item","src","url","alt","Caption","title","explanation","hdurl","FavoritePictures","deleteAllPictures","setDeleteAllPictures","favoritePicturesFromLocalStorage","length","favoritePicturesList","variant","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","value","CardDeck","map","item","key","width","Img","Title","Footer","indexOf","splice","App","exact","path","component","AstrologyPictureOfDay","Boolean","window","location","hostname","match","initialState","combineReducers","action","newFavoritePicturesList","concat","newPicture","pictoreDataDelete","valuesFavoritesPicturesList","Object","values","favoritePicturesUpdated","indexOfPictoreDataDelete","findIndex","element","newListFavoritesPictures","filter","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.019c79d5.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n//import MedicineIcon from './../img/appointment.svg'\r\nimport './style.css'\r\n\r\nfunction Navbar() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [menu, setMenu] = useState(false);\r\n    const [show, setShow] = useState('')\r\n\r\n    useEffect(() => { //did mount\r\n        setShow({show:(menu) ? \"show\" : \"\" })\r\n    }, [menu]);\r\n\r\n    function toggleMenu() {\r\n        setMenu({ menu: !menu })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n            {/* <img className=\"imgCustomize\" src={MedicineIcon} alt=\"Medicine Icon\" /> */}\r\n            <a className=\"navbar-brand\" href=\"/\">Nasa Planetory</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" onClick={toggleMenu}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className={\"collapse navbar-collapse navbarCustomize \" + show}>\r\n                <div className=\"navbar-nav\">\r\n                    <a className=\"nav-item nav-link \" href=\"/favoritePictures\" >Favorite Pictures</a>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar","import axios from 'axios'\r\n\r\nconst APIKEY = process.env.REACT_APP_NASA_API_KEY\r\n\r\nconst getPictureDate = (date) => \r\n    axios.get(`https://api.nasa.gov/planetary/apod?api_key=${APIKEY}&date=${date}&hd=true`)\r\n    .then(response => {\r\n        console.log(response)\r\n        return Promise.resolve(response)\r\n    }).catch(error => {\r\n        console.log(error)\r\n        //return Promise.reject(\"Date must be between Jun 16, 1995 and Jun 25, 2020.\", error)\r\n    });\r\n\r\nexport default getPictureDate","import axios from 'axios'\r\n\r\nconst APIKEY = process.env.REACT_APP_NASA_API_KEY\r\n\r\nconst getPreviousDay = (date) => \r\n    axios.get(`https://api.nasa.gov/planetary/apod?api_key=${APIKEY}&date=${date}&hd=true`)\r\n    .then(response => {\r\n        console.log(response)\r\n        return response.data\r\n    }).catch(error => {\r\n        console.log(error)\r\n        return Promise.reject(\"Date must be between Jun 16, 1995 and Jun 25, 2020.\", error)\r\n    });\r\n\r\nexport default getPreviousDay","import axios from 'axios'\r\n\r\nconst APIKEY = process.env.REACT_APP_NASA_API_KEY\r\n\r\nconst getNetxDay = (date) => \r\n    axios.get(`https://api.nasa.gov/planetary/apod?api_key=${APIKEY}&date=${date}&hd=true`)\r\n    .then(response => {\r\n        console.log(response)\r\n        return Promise.resolve(response.data)\r\n    }).catch(error => {\r\n        console.log(error)\r\n        return Promise.reject(\"Date must be between Jun 16, 1995 and Jun 25, 2020.\", error)\r\n    });\r\n\r\nexport default getNetxDay","import React, { useState, useEffect } from 'react';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { SAVE_PICTURE } from '../store/actions/types';\r\nimport Swal from 'sweetalert2'\r\n\r\nfunction Bookmark(props) {\r\n    const favoritePictures = useSelector(state => state.astronomy.favoritePictures)\r\n    const [favorite, setFavorite] = useState([])\r\n    const [findPicture, setFindPicture] = useState(false)\r\n    //const [favoritePictures, setFavoritePictures] = useState([])\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        \r\n    },[])\r\n\r\n    function savePicture() {\r\n        let favoritesImages = JSON.parse(localStorage.getItem(\"favoritePictures\") || \"[]\");\r\n        //let findPictureInFavorite =  findPictureInFavoritePictures(props)\r\n        setFindPicture(findPictureInFavoritePictures(props))\r\n        if (findPicture === false) {\r\n            favoritesImages.push(props);\r\n            setFavorite(props)\r\n            localStorage.setItem(\"favoritePictures\", JSON.stringify(favoritesImages));\r\n            //setFavoritePictures(favoritesImages)\r\n            dispatch({ type: SAVE_PICTURE, pictureData: props })\r\n            Swal.fire('this images was saving in favorite pictures')\r\n            \r\n        } else {\r\n           \r\n            Swal.fire('this images existe in favorite pictures')\r\n            console.log('this images existe in favorite pictures')\r\n         \r\n        }\r\n\r\n    }\r\n\r\n    function findPictureInFavoritePictures(picture) {\r\n        console.log('picture',picture)\r\n        let index = favoritePictures.includes(picture);\r\n        console.log('index',index)\r\n        return index\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <OverlayTrigger\r\n            overlay={\r\n                <Tooltip id={`tooltip-left`}>\r\n                    <strong>Click here to save Picture</strong>.\r\n                </Tooltip>\r\n            }\r\n        >\r\n            <Button onClick={savePicture}>\r\n                {<FavoriteIcon style={{ color: '#ff0000' }} />}\r\n            </Button>\r\n\r\n        </OverlayTrigger>\r\n    )\r\n}\r\n\r\nexport default Bookmark\r\n//  <Button onClick={changeBookmark}>\r\n\r\n//             <FavoriteBorderIcon style={{ color: '#ff0000' }} />\r\n//         </Button>","export const SAVE_PICTURE = 'SAVE_PICTURE'\r\nexport const DELETE_PICTURE = 'DELETE_PICTURE'\r\nexport const DELETE_ALL_PICTURES = 'DELETE_ALL_PICTURES'\r\nexport const SAVE_LIST_FAVORITE_PICTURES = 'SAVE_LIST_FAVORITE_PICTURES'\r\n","import React, { useState, useEffect } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Card from 'react-bootstrap/Card'\r\nimport moment from 'moment'\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport getPictureDate from '../services/getPictureDate'\r\nimport getPreviousDay from '../services/getPreviousDay'\r\nimport getNextDay from '../services/getNextDay'\r\n\r\nimport Bookmark from '../components/Bookmark'\r\n\r\nfunction AstronomyPictureOfDay() {\r\n    const [astrology, setAstrology] = useState([]);\r\n    const [dayBefore, setDayBefore] = useState([]);\r\n    const [dayAfter, setDayAfter] = useState([]);\r\n    const [startDate, setStartDay] = useState(new Date());\r\n    const [currentDate, setCurrentDay] = useState(new Date());\r\n    const [showPicture, setShowPicture] = useState(false);\r\n    const [showYoutube, setShowYoutube] = useState(false);\r\n\r\n    useEffect(() => { //did mount\r\n        const today = moment(startDate).format('YYYY-MM-DD')\r\n        getTodayPicture(today)\r\n        getPreviousPicture(today)\r\n        getNextPicture(today)\r\n    }, []);\r\n\r\n\r\n    async function getTodayPicture(date) {\r\n        const datePic = await getPictureDate(date)\r\n        console.log(datePic.data)\r\n        setAstrology(datePic.data)\r\n        // console.log(astrology)\r\n    }\r\n\r\n    async function getPreviousPicture(date) {\r\n        const previous = moment(date).subtract(1, 'days').format('YYYY-MM-DD')\r\n        const picPrevious = await getPreviousDay(previous);\r\n        setDayBefore(picPrevious)\r\n    }\r\n\r\n    async function getNextPicture(date) {\r\n        try {\r\n            const next = moment(date).add(1, 'days').format('YYYY-MM-DD')\r\n            const picNext = await getNextDay(next);\r\n            if (typeof picNext === 'undefined') {\r\n                setDayAfter([])\r\n                setShowPicture(false)\r\n\r\n            } else {\r\n                const picNext = await getNextDay(next);\r\n                setDayAfter(picNext)\r\n                setShowPicture(true)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.warn(error)\r\n        }\r\n    }\r\n\r\n    // function mediaType(data) {\r\n    //     switch (data.media_type) {\r\n    //         case ('video'):\r\n    //             return (\r\n    //                 <div>\r\n                      \r\n    //                 </div>\r\n                    \r\n    //             )\r\n\r\n    //         case ('image'):\r\n    //             return (\r\n    //                 <img\r\n    //                     className=\"rounded mx-auto d-block w-100\"\r\n    //                     src={data.hdurl}\r\n    //                     alt=\"First slide\"\r\n    //                 />\r\n    //             )\r\n    //         default:\r\n    //             return null\r\n    //     }\r\n    // }\r\n\r\n\r\n    function handleDatepickerChange(date) {\r\n        console.log('handleDatepickerChange' + date)\r\n        console.log(moment(date).format('YYYY-MM-DD'))\r\n        const specDay = moment(date).format('YYYY-MM-DD')\r\n        if (date > startDate) {\r\n            console.log('no puedes ingresar fechas despues del' + startDate)\r\n        }\r\n        setCurrentDay(date)\r\n        getTodayPicture(specDay)\r\n        getNextPicture(specDay)\r\n        getPreviousPicture(specDay)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className='container-fluid' >\r\n                <div className=\"row title\" style={{ marginBottom: \"20px\" }} >\r\n                    <div className=\"container mb-2 mt-4 text-center\">\r\n                        <h2>Astronomy Picture of the Day</h2>\r\n                    </div>\r\n\r\n                    <div className=\"container mb-4\">\r\n\r\n\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    Select date and display Astronomy Picture of the Day\r\n                                    </Card.Text>\r\n                                <DatePicker\r\n                                    selected={currentDate}\r\n                                    onChange={date => handleDatepickerChange(date)}\r\n                                    maxDate={startDate}\r\n                                    minTime={new Date(\"Jun 16, 1995\")}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='container-fluid' >\r\n                        <Carousel>\r\n                            <Carousel.Item>\r\n                                <img\r\n                                    className=\"rounded mx-auto d-block w-100\"\r\n                                    src={dayBefore.url}\r\n                                    alt=\"First slide\"\r\n                                />\r\n                                <Carousel.Caption>\r\n                                    <h3>{dayBefore.title}</h3>\r\n                                    <p><small>{dayBefore.explanation}</small></p>\r\n                                    <p><small>{dayBefore.date}</small></p>\r\n                                    <Bookmark {...dayBefore} />\r\n                                </Carousel.Caption>\r\n                            </Carousel.Item>\r\n\r\n                            <Carousel.Item>\r\n                                <img\r\n                                    className=\"rounded mx-auto d-block w-100\"\r\n                                    src={astrology.hdurl}\r\n                                    alt=\"Second slide\"\r\n                                />\r\n\r\n                                <Carousel.Caption>\r\n                                    <h3>{astrology.title}</h3>\r\n                                    <p><small>{astrology.explanation}</small></p>\r\n                                    <p><small>{astrology.date}</small></p>\r\n                                    <Bookmark {...astrology} />\r\n                                </Carousel.Caption>\r\n                            </Carousel.Item>\r\n\r\n                            {showPicture &&\r\n                                <Carousel.Item>\r\n                                    <img\r\n                                        className=\"rounded mx-auto d-block w-100\"\r\n                                        src={dayAfter.url}\r\n                                        alt=\"Third slide\"\r\n                                    />\r\n\r\n                                    <Carousel.Caption>\r\n                                        <h3>{dayAfter.title}</h3>\r\n                                        <p><small>{dayAfter.explanation}</small></p>\r\n                                        <p><small>{dayAfter.date}</small></p>\r\n                                        <Bookmark {...dayAfter} />\r\n                                    </Carousel.Caption>\r\n\r\n                                </Carousel.Item>\r\n                            }\r\n                        </Carousel>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default AstronomyPictureOfDay","import React, { useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from 'react-bootstrap/Button'\r\nimport ButtonIcon from '@material-ui/core/Button';\r\nimport Swal from 'sweetalert2'\r\nimport { SAVE_LIST_FAVORITE_PICTURES, DELETE_PICTURE, DELETE_ALL_PICTURES } from '../store/actions/types';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction FavoritePictures() {\r\n    const dispatch = useDispatch()\r\n    const favoritePictures = useSelector(state => state.astronomy.favoritePictures)\r\n    // const [favoritePictures, setFavoritePictures] = useState([])\r\n    const [deleteAllPictures, setDeleteAllPictures] = useState(false)\r\n    useEffect(() => {\r\n        const favoritePicturesFromLocalStorage = JSON.parse(localStorage.getItem(\"favoritePictures\") || \"[]\")\r\n        // setFavoritePictures(arrayOfPicturesFromLocalStorage)\r\n      \r\n      if(favoritePicturesFromLocalStorage.length>0){\r\n        setDeleteAllPictures(true)\r\n      }else{\r\n        setDeleteAllPictures(false)\r\n      }\r\n        dispatch({ type: SAVE_LIST_FAVORITE_PICTURES, favoritePicturesList: favoritePicturesFromLocalStorage });\r\n    }, [])\r\n\r\n    function deletePictureOfFavorites(data) {\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                let index = favoritePictures.indexOf(data);\r\n                if (index > -1) {\r\n                    favoritePictures.splice(index, 1);\r\n                }\r\n                dispatch({ type: DELETE_PICTURE, data });\r\n                localStorage.setItem(\"favoritePictures\", JSON.stringify(favoritePictures));\r\n                Swal.fire(\r\n\r\n                    'Deleted!',\r\n                    'Your file has been deleted.',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    function deleteAllFavoritePictures() {\r\n        \r\n        if (deleteAllPictures === true) {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!'\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    // setFavoritePictures([])\r\n                    localStorage.setItem(\"favoritePictures\", JSON.stringify([]));\r\n                    dispatch({ type: DELETE_ALL_PICTURES })\r\n                    setDeleteAllPictures(false)\r\n                    Swal.fire(\r\n                        'Deleted!',\r\n                        'Your file has been deleted.',\r\n                        'success'\r\n                    )\r\n                }\r\n            })\r\n        } else {\r\n            Swal.fire('You don not have favorite pictures to delete')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='container-fluid' >\r\n                <div className=\"row title\" style={{ marginBottom: \"20px\" }} >\r\n                    <div className=\"container mb-2 mt-4 text-center\">\r\n                        <h2>Favorite Astronomy Pictures</h2>\r\n                    </div>\r\n\r\n                    <div className=\"container mb-4\">\r\n\r\n\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    Would you like to delete all your favorite pituctures?\r\n                                </Card.Text>\r\n\r\n                                <Button variant=\"danger\" onClick={() => deleteAllFavoritePictures()}>Delete</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"container-fluid\">\r\n\r\n                        <CardDeck>\r\n                            {favoritePictures.map((item, index) => (\r\n                                <div key={index}>\r\n\r\n                                    <Card style={{ width: '18rem' }}>\r\n                                        <Card.Img className=\"img-thumbnail\" variant=\"top\" src={item.hdurl} />\r\n                                        <Card.Body>\r\n                                            <Card.Title>{item.title}</Card.Title>\r\n                                            <Card.Footer>\r\n                                                <small className=\"text-muted\">\r\n                                                    <ButtonIcon onClick={() => deletePictureOfFavorites(item)}>\r\n                                                        <DeleteIcon />\r\n                                                    </ButtonIcon>\r\n\r\n                                                </small>\r\n                                            </Card.Footer>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n\r\n\r\n                                </div>\r\n                            ))}\r\n                        </CardDeck>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='container-fluid' >\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritePictures","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './containers/Navbar'\nimport AstrologyPictureOfDay from './containers/AstrologyPictureOfDay'\nimport FavoritePictures from './containers/FavoritePictures'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <div className=\"App\">\n          <Navbar></Navbar>\n        </div>\n        <Switch>\n          <Route exact path='/'component={AstrologyPictureOfDay} />\n          <Route exact path='/favoritePictures'component={FavoritePictures} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    SAVE_PICTURE,\r\n    DELETE_PICTURE,\r\n    DELETE_ALL_PICTURES,\r\n    SAVE_LIST_FAVORITE_PICTURES\r\n} from '../actions/types'\r\n\r\nconst initialState =  {favoritePictures: []}\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case SAVE_LIST_FAVORITE_PICTURES:\r\n            const newFavoritePicturesList = action.favoritePicturesList;\r\n            return {\r\n                ...state,\r\n                favoritePictures: state.favoritePictures.concat( newFavoritePicturesList )\r\n            }\r\n        case SAVE_PICTURE:\r\n            const newPicture = action.pictureData;\r\n            return {\r\n                ...state,\r\n                favoritePictures: state.favoritePictures.concat( newPicture )\r\n            }\r\n         \r\n        case DELETE_PICTURE:\r\n            const pictoreDataDelete = action.data;\r\n            const valuesFavoritesPicturesList = Object.values(state.favoritePictures)\r\n            const favoritePicturesUpdated = [...valuesFavoritesPicturesList]\r\n            const indexOfPictoreDataDelete = favoritePicturesUpdated.findIndex((element) => pictoreDataDelete === element);\r\n            const newListFavoritesPictures = favoritePicturesUpdated.filter((element, index) => index !== indexOfPictoreDataDelete);\r\n            return {\r\n                ...state,\r\n                favoritePictures: newListFavoritesPictures,\r\n            }\r\n        case DELETE_ALL_PICTURES:\r\n            return {\r\n                ...state,\r\n                favoritePictures: [],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport favoritePituresState from './app_reducer'\r\n\r\n\r\nexport default combineReducers({ \r\n    astronomy: favoritePituresState \r\n })","import { createStore, applyMiddleware} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from './reducers/index'\r\n\r\n// const initialState = {\r\n//     favoritePictures: [],\r\n// }\r\n\r\nconst store = createStore(\r\n  // initialState, \r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware())\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}